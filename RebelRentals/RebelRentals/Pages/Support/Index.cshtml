@page
@model RebelRentals.Pages.Support.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.OrderIdSort">
                    @Html.DisplayNameFor(model => model.ShipOrder[0].OrderId)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.ShipIdSort">
                    @Html.DisplayNameFor(model => model.ShipOrder[0].ShipId)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.CountSort">
                    @Html.DisplayNameFor(model => model.ShipOrder[0].Count)
                </a>
            </th>
        </tr>
    </thead>
    <tbody>

@{ foreach (var item in Model.ShipOrder)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrderId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ShipId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Count)
            </td>
            <td>
                @Html.ActionLink("Edit", "OnGetAsync", new { comp = item.ShipId, part = item.OrderId  }, null) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
        }
    }
    </tbody>
</table>
