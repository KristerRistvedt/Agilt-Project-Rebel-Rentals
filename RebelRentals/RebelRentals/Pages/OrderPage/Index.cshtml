@page
@model RebelRentals.Pages.OrderPage.IndexModel
@using Microsoft.AspNetCore.Http;
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Order summary</h1>

<p>
    Total cost: @(Math.Round(Model.TotalCost * JsonConvert.DeserializeObject<double>(HttpContext.Session.GetString("SessionRate")), 3)) @(JsonConvert.DeserializeObject<Currency>(HttpContext.Session.GetString("SessionCurrency")).CurrencySymbol)
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                Model
            </th>
            <th>
                Price
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ListOfShipsInCart)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Model)
                </td>
                <td>
                    @(Math.Round(item.Price*JsonConvert.DeserializeObject<double>(HttpContext.Session.GetString("SessionRate")), 3)) @(JsonConvert.DeserializeObject<Currency>(HttpContext.Session.GetString("SessionCurrency")).CurrencySymbol)
                </td>
                <td>
                    <a asp-page="./ShoppingCartOverview" asp-route-id="@item.Id">Back to cart</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@if (Model.ListOfShipsInCart.First().Model != "You haven't added anything yet.")
{
    <form method="post" asp-page-handler="ClearCart">
        <button>Clear cart</button>
    </form>
    <form method="post" asp-route-id="" asp-page-handler="FinalizeOrder">
        <button>Finalize order</button>
    </form>
}
@if (Model.CheckOutFailed)
{
    <ul class="text-danger">
        <li>Could not finalize your order. You have to register and sign in to make an order.</li>
    </ul>
}
